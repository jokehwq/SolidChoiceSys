<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.foreveross.webbase.bdxt.dao.BdxtUserCardDao">

    <sql id="bdxtUserCardColumns">
		a.id AS "id",
		a.bdxt_user_id AS "bdxtUserId",
		a.bdxt_activity_id AS "bdxtActivityId",
		a.clock_start_time AS "clockStartTime",
		a.clock_end_time AS "clockEndTime",
		a.longitude AS "longitude",
		a.latitude AS "latitude",
		a.clock_state AS "clockState",
		a.clock_city AS "clockCity",
		a.status AS "status",
		a.createtime AS "createtime",
		a.updatetime AS "updatetime",
		a.create_by AS "createBy.id",
		a.update_by AS "updateBy.id"
	</sql>

    <sql id="bdxtUserCardJoins">
    </sql>

    <select id="get" resultType="BdxtUserCard">
        SELECT
        <include refid="bdxtUserCardColumns"/>
        FROM bdxt_user_card a
        <include refid="bdxtUserCardJoins"/>
        WHERE a.id = #{id}
    </select>


    <!--查询活动打卡记录-->
    <select id="findList" resultType="com.foreveross.webbase.bdxt.entity.BdxtUserCard">
        SELECT
        uc.bdxt_activity_id,
        u.head_url as headUrl,
        u.phone as phone,
        ud.realname as realName,
        uc.clock_state,
        IFNULL(uc.clock_start_time, "")as clockStartTime,
        IFNULL(uc.clock_end_time, "") AS clockEndTime,
        uc.clock_city,
        uc.sign_longitude,
        uc.sign_latitude,
        uc.signout_longitude,
        uc.signout_latitude
        FROM
        bdxt_user_card uc
        LEFT JOIN bdxt_user u on u.id=uc.bdxt_user_id
        LEFT JOIN bdxt_user_detail ud on ud.bdxt_user_id=uc.bdxt_user_id
        <where>
            AND uc.bdxt_activity_id =#{bdxtActivityId}
            <if test="realName!=null and realName!=''">
                and ud.realname = #{realName}
            </if>
            <if test="phone!=null and phone!=''">
                and u.phone = #{phone}
            </if>
            <if test="clockTime!=null and clockTime!=''">
                and DATE_FORMAT(uc.clock_start_time, '%Y-%m-%d')=DATE_FORMAT(#{clockTime},'%Y-%m-%d')
            </if>
            <if test="clockState!=null">
                and uc.clock_state=#{clockState}
            </if>
            <if test="signTimeLeft!=null and signTimeLeft!=''">
                and DATE_FORMAT(uc.clock_start_time, '%Y-%m-%d %H:%i:%s') &gt;= DATE_FORMAT(#{signTimeLeft},'%Y-%m-%d %H:%i:%s')
            </if>
            <if test="signTimeRight!=null and signTimeRight!=''">
                and DATE_FORMAT(uc.clock_start_time, '%Y-%m-%d %H:%i:%s') &lt;= DATE_FORMAT(#{signTimeRight},'%Y-%m-%d %H:%i:%s')
            </if>
            <if test="signOutTimeLeft!=null and signOutTimeLeft!=''">
                and DATE_FORMAT(uc.clock_end_time, '%Y-%m-%d %H:%i:%s') &gt;= DATE_FORMAT(#{signOutTimeLeft},'%Y-%m-%d %H:%i:%s')
            </if>
            <if test="signTimeRight!=null and signTimeRight!=''">
                and DATE_FORMAT(uc.clock_end_time, '%Y-%m-%d %H:%i:%s') &lt;= DATE_FORMAT(#{signOutTimeRight},'%Y-%m-%d %H:%i:%s')
            </if>
        </where>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
                ORDER BY uc.create_time DESC
            </otherwise>
        </choose>
    </select>

    <insert id="addUserCardInfoByMap" parameterType="java.util.Map" useGeneratedKeys="true" keyProperty="id">
        <selectKey keyProperty="id" resultType="String" order="BEFORE">
            select replace(uuid(),'-','') from dual
        </selectKey>
        INSERT INTO bdxt_user_card(
        id,
        bdxt_user_id,
        bdxt_activity_id,
        clock_start_time,
        sign_longitude,
        sign_latitude,
        clock_state,
        status,
        create_time,
        update_time,
        create_by,
        update_by
        ) VALUES (
        #{id},
        #{bdxtUserId},
        #{bdxtActivityId},
        #{clockTime},
        #{longitude},
        #{latitude},
        1,
        1,
        now(),
        now(),
        #{createBy},
        #{updateBy}
        )
    </insert>
    <!--更新用户打卡信息 -->
    <update id="update" parameterType="com.foreveross.webbase.bdxt.entity.BdxtUserCard">
		UPDATE bdxt_user_card SET
		    remark=#{remark},
		    clock_state=#{clockState},
            update_time = now(),
            update_by = #{updateBy.name}
		WHERE id = #{id}
	</update>

    <!--查询用户打卡列表信息 -->
    <select id="queryUserCardInfoById" resultType="com.foreveross.webbase.bdxt.entity.BdxtUserCard">
	SELECT
		uc.id,
		a.activity_name as activityName,
		a.id as bdxtActivityId
		FROM
		bdxt_user_card uc
		LEFT JOIN bdxt_activity a ON a.id = uc.bdxt_activity_id
		<where>
		  uc.bdxt_user_id =#{userId}
        </where>
        GROUP BY uc.bdxt_activity_id
	</select>

    <!--查询用户打卡详情-->
    <select id="queryCardDetailByMap" resultType="java.lang.String">
SELECT
	u.id
FROM
	bdxt_user_card u
WHERE
	1 = 1
AND u.bdxt_user_id = #{bdxtUserId}
AND u.bdxt_activity_id = #{bdxtActivityId}
AND u.create_time &gt;#{day}
AND u.create_time &lt;#{nextDay}
	</select>
    <!--更新用户打卡信息 -->
    <update id="updateUserCardInfoByMap" parameterType="java.util.Map">
		UPDATE bdxt_user_card SET
		signout_longitude = #{longitude},
		signout_latitude = #{latitude},
		update_time = now(),
		clock_end_time=#{clockTime},
        status=1
		WHERE bdxt_user_id = #{bdxtUserId}
		and bdxt_activity_id=#{bdxtActivityId}
	</update>

    <!--添加用户打卡时间信息-->
    <insert id="addUserCardTimeByMap" parameterType="java.util.Map">
        <selectKey keyProperty="id" resultType="String" order="BEFORE">
            select replace(uuid(),'-','') from dual
        </selectKey>
        INSERT INTO bdxt_user_card_time(
        id,
        bdxt_user_card_id,
        clock_time,
        clock_hour_time,
        status,
        create_time,
        update_time,
        create_by,
        update_by
        ) VALUES (
        #{id},
        #{userCardId},
        #{clockTime},
        #{clockHourTime},
        1,
        now(),
        now(),
        #{createBy},
        #{updateBy}
        )
    </insert>

    <!--queryCardTimeInfoById -->
    <select id="queryCardTimeInfoById" resultType="com.foreveross.webbase.bdxt.entity.BdxtUserCardTime">
        SELECT
        uct.clock_time,
        GROUP_CONCAT(uct.clock_hour_time ORDER BY uct.create_time ASC)as clockHourTime
        FROM
        bdxt_user_card_time uct
        <where>
            bdxt_user_card_id = #{bdxtUserCardId}
        </where>
        GROUP BY
        uct.clock_time
    </select>


</mapper>
package com.senson.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class UserSignRecordExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table a_user_sign_record
     *
     * @mbggenerated Wed Sep 05 18:05:14 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table a_user_sign_record
     *
     * @mbggenerated Wed Sep 05 18:05:14 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table a_user_sign_record
     *
     * @mbggenerated Wed Sep 05 18:05:14 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table a_user_sign_record
     *
     * @mbggenerated Wed Sep 05 18:05:14 CST 2018
     */
    public UserSignRecordExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table a_user_sign_record
     *
     * @mbggenerated Wed Sep 05 18:05:14 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table a_user_sign_record
     *
     * @mbggenerated Wed Sep 05 18:05:14 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table a_user_sign_record
     *
     * @mbggenerated Wed Sep 05 18:05:14 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table a_user_sign_record
     *
     * @mbggenerated Wed Sep 05 18:05:14 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table a_user_sign_record
     *
     * @mbggenerated Wed Sep 05 18:05:14 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table a_user_sign_record
     *
     * @mbggenerated Wed Sep 05 18:05:14 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table a_user_sign_record
     *
     * @mbggenerated Wed Sep 05 18:05:14 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table a_user_sign_record
     *
     * @mbggenerated Wed Sep 05 18:05:14 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table a_user_sign_record
     *
     * @mbggenerated Wed Sep 05 18:05:14 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table a_user_sign_record
     *
     * @mbggenerated Wed Sep 05 18:05:14 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table a_user_sign_record
     *
     * @mbggenerated Wed Sep 05 18:05:14 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Long value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Long value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Long value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Long value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Long value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Long> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Long> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Long value1, Long value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Long value1, Long value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andEarnIntegralIsNull() {
            addCriterion("earn_integral is null");
            return (Criteria) this;
        }

        public Criteria andEarnIntegralIsNotNull() {
            addCriterion("earn_integral is not null");
            return (Criteria) this;
        }

        public Criteria andEarnIntegralEqualTo(Integer value) {
            addCriterion("earn_integral =", value, "earnIntegral");
            return (Criteria) this;
        }

        public Criteria andEarnIntegralNotEqualTo(Integer value) {
            addCriterion("earn_integral <>", value, "earnIntegral");
            return (Criteria) this;
        }

        public Criteria andEarnIntegralGreaterThan(Integer value) {
            addCriterion("earn_integral >", value, "earnIntegral");
            return (Criteria) this;
        }

        public Criteria andEarnIntegralGreaterThanOrEqualTo(Integer value) {
            addCriterion("earn_integral >=", value, "earnIntegral");
            return (Criteria) this;
        }

        public Criteria andEarnIntegralLessThan(Integer value) {
            addCriterion("earn_integral <", value, "earnIntegral");
            return (Criteria) this;
        }

        public Criteria andEarnIntegralLessThanOrEqualTo(Integer value) {
            addCriterion("earn_integral <=", value, "earnIntegral");
            return (Criteria) this;
        }

        public Criteria andEarnIntegralIn(List<Integer> values) {
            addCriterion("earn_integral in", values, "earnIntegral");
            return (Criteria) this;
        }

        public Criteria andEarnIntegralNotIn(List<Integer> values) {
            addCriterion("earn_integral not in", values, "earnIntegral");
            return (Criteria) this;
        }

        public Criteria andEarnIntegralBetween(Integer value1, Integer value2) {
            addCriterion("earn_integral between", value1, value2, "earnIntegral");
            return (Criteria) this;
        }

        public Criteria andEarnIntegralNotBetween(Integer value1, Integer value2) {
            addCriterion("earn_integral not between", value1, value2, "earnIntegral");
            return (Criteria) this;
        }

        public Criteria andRuleIdIsNull() {
            addCriterion("rule_id is null");
            return (Criteria) this;
        }

        public Criteria andRuleIdIsNotNull() {
            addCriterion("rule_id is not null");
            return (Criteria) this;
        }

        public Criteria andRuleIdEqualTo(Integer value) {
            addCriterion("rule_id =", value, "ruleId");
            return (Criteria) this;
        }

        public Criteria andRuleIdNotEqualTo(Integer value) {
            addCriterion("rule_id <>", value, "ruleId");
            return (Criteria) this;
        }

        public Criteria andRuleIdGreaterThan(Integer value) {
            addCriterion("rule_id >", value, "ruleId");
            return (Criteria) this;
        }

        public Criteria andRuleIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("rule_id >=", value, "ruleId");
            return (Criteria) this;
        }

        public Criteria andRuleIdLessThan(Integer value) {
            addCriterion("rule_id <", value, "ruleId");
            return (Criteria) this;
        }

        public Criteria andRuleIdLessThanOrEqualTo(Integer value) {
            addCriterion("rule_id <=", value, "ruleId");
            return (Criteria) this;
        }

        public Criteria andRuleIdIn(List<Integer> values) {
            addCriterion("rule_id in", values, "ruleId");
            return (Criteria) this;
        }

        public Criteria andRuleIdNotIn(List<Integer> values) {
            addCriterion("rule_id not in", values, "ruleId");
            return (Criteria) this;
        }

        public Criteria andRuleIdBetween(Integer value1, Integer value2) {
            addCriterion("rule_id between", value1, value2, "ruleId");
            return (Criteria) this;
        }

        public Criteria andRuleIdNotBetween(Integer value1, Integer value2) {
            addCriterion("rule_id not between", value1, value2, "ruleId");
            return (Criteria) this;
        }

        public Criteria andCumulativeDaysIsNull() {
            addCriterion("cumulative_days is null");
            return (Criteria) this;
        }

        public Criteria andCumulativeDaysIsNotNull() {
            addCriterion("cumulative_days is not null");
            return (Criteria) this;
        }

        public Criteria andCumulativeDaysEqualTo(Integer value) {
            addCriterion("cumulative_days =", value, "cumulativeDays");
            return (Criteria) this;
        }

        public Criteria andCumulativeDaysNotEqualTo(Integer value) {
            addCriterion("cumulative_days <>", value, "cumulativeDays");
            return (Criteria) this;
        }

        public Criteria andCumulativeDaysGreaterThan(Integer value) {
            addCriterion("cumulative_days >", value, "cumulativeDays");
            return (Criteria) this;
        }

        public Criteria andCumulativeDaysGreaterThanOrEqualTo(Integer value) {
            addCriterion("cumulative_days >=", value, "cumulativeDays");
            return (Criteria) this;
        }

        public Criteria andCumulativeDaysLessThan(Integer value) {
            addCriterion("cumulative_days <", value, "cumulativeDays");
            return (Criteria) this;
        }

        public Criteria andCumulativeDaysLessThanOrEqualTo(Integer value) {
            addCriterion("cumulative_days <=", value, "cumulativeDays");
            return (Criteria) this;
        }

        public Criteria andCumulativeDaysIn(List<Integer> values) {
            addCriterion("cumulative_days in", values, "cumulativeDays");
            return (Criteria) this;
        }

        public Criteria andCumulativeDaysNotIn(List<Integer> values) {
            addCriterion("cumulative_days not in", values, "cumulativeDays");
            return (Criteria) this;
        }

        public Criteria andCumulativeDaysBetween(Integer value1, Integer value2) {
            addCriterion("cumulative_days between", value1, value2, "cumulativeDays");
            return (Criteria) this;
        }

        public Criteria andCumulativeDaysNotBetween(Integer value1, Integer value2) {
            addCriterion("cumulative_days not between", value1, value2, "cumulativeDays");
            return (Criteria) this;
        }

        public Criteria andConsecutiveDaysIsNull() {
            addCriterion("consecutive_days is null");
            return (Criteria) this;
        }

        public Criteria andConsecutiveDaysIsNotNull() {
            addCriterion("consecutive_days is not null");
            return (Criteria) this;
        }

        public Criteria andConsecutiveDaysEqualTo(Integer value) {
            addCriterion("consecutive_days =", value, "consecutiveDays");
            return (Criteria) this;
        }

        public Criteria andConsecutiveDaysNotEqualTo(Integer value) {
            addCriterion("consecutive_days <>", value, "consecutiveDays");
            return (Criteria) this;
        }

        public Criteria andConsecutiveDaysGreaterThan(Integer value) {
            addCriterion("consecutive_days >", value, "consecutiveDays");
            return (Criteria) this;
        }

        public Criteria andConsecutiveDaysGreaterThanOrEqualTo(Integer value) {
            addCriterion("consecutive_days >=", value, "consecutiveDays");
            return (Criteria) this;
        }

        public Criteria andConsecutiveDaysLessThan(Integer value) {
            addCriterion("consecutive_days <", value, "consecutiveDays");
            return (Criteria) this;
        }

        public Criteria andConsecutiveDaysLessThanOrEqualTo(Integer value) {
            addCriterion("consecutive_days <=", value, "consecutiveDays");
            return (Criteria) this;
        }

        public Criteria andConsecutiveDaysIn(List<Integer> values) {
            addCriterion("consecutive_days in", values, "consecutiveDays");
            return (Criteria) this;
        }

        public Criteria andConsecutiveDaysNotIn(List<Integer> values) {
            addCriterion("consecutive_days not in", values, "consecutiveDays");
            return (Criteria) this;
        }

        public Criteria andConsecutiveDaysBetween(Integer value1, Integer value2) {
            addCriterion("consecutive_days between", value1, value2, "consecutiveDays");
            return (Criteria) this;
        }

        public Criteria andConsecutiveDaysNotBetween(Integer value1, Integer value2) {
            addCriterion("consecutive_days not between", value1, value2, "consecutiveDays");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("remark is null");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("remark is not null");
            return (Criteria) this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("remark =", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("remark <>", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("remark >", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("remark >=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("remark <", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("remark <=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("remark like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("remark not like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkIn(List<String> values) {
            addCriterion("remark in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotIn(List<String> values) {
            addCriterion("remark not in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("remark between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("remark not between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table a_user_sign_record
     *
     * @mbggenerated do_not_delete_during_merge Wed Sep 05 18:05:14 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table a_user_sign_record
     *
     * @mbggenerated Wed Sep 05 18:05:14 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}